apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-deployment
  namespace: credit-risk-ai
  labels:
    app: mlflow
    component: ml-tracking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
        component: ml-tracking
    spec:
      containers:
      - name: mlflow
        image: python:3.11-slim
        ports:
        - containerPort: 5000
        env:
        - name: MLFLOW_BACKEND_STORE_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: MLFLOW_BACKEND_STORE_URI
        - name: MLFLOW_DEFAULT_ARTIFACT_ROOT
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: MLFLOW_DEFAULT_ARTIFACT_ROOT
        volumeMounts:
        - name: mlflow-artifacts
          mountPath: /mlflow/artifacts
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        command:
        - /bin/bash
        - -c
        - |
          pip install mlflow psycopg2-binary &&
          mlflow server \
            --backend-store-uri $MLFLOW_BACKEND_STORE_URI \
            --default-artifact-root $MLFLOW_DEFAULT_ARTIFACT_ROOT \
            --host 0.0.0.0 \
            --port 5000
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: mlflow-artifacts
        persistentVolumeClaim:
          claimName: mlflow-artifacts-pvc
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - /bin/bash
        - -c
        - |
          until pg_isready -h postgres-service -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: credit-risk-ai
  labels:
    app: mlflow
    component: ml-tracking
spec:
  selector:
    app: mlflow
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP